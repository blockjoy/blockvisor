name: Blockvisor

on:
  push:
    branches:
      - "main"
      - "master"
  pull_request:
    branches:
      - "main"
      - "master"

env:
  RUST_LOG: trace

jobs:
  test:
    name: Tests
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: x86_64-unknown-linux-musl
          override: true
      - name: Setup packages
        run: >
          sudo apt -y install build-essential pkg-config libssl-dev cmake tmux musl-tools pigz awscli

      - name: Build
        run: >
          make build
      - name: Reinstall
        run: |
          make reinstall
          AWS_ACCESS_KEY_ID=${{ secrets.R2_ACCESS_KEY_ID }} AWS_SECRET_ACCESS_KEY=${{ secrets.R2_SECRET_ACCESS_KEY }} AWS_REGION=us-east-1 \
            aws --endpoint-url https://${{ secrets.R2_ACCOUNT_ID }}.r2.cloudflarestorage.com/ s3 cp \
            babel/protocols/helium/helium-validator.toml \
            s3://cookbook-dev/chains/helium/validator/0.0.1/babel.toml
          AWS_ACCESS_KEY_ID=${{ secrets.R2_ACCESS_KEY_ID }} AWS_SECRET_ACCESS_KEY=${{ secrets.R2_SECRET_ACCESS_KEY }} AWS_REGION=us-east-1 \
            aws --endpoint-url https://${{ secrets.R2_ACCOUNT_ID }}.r2.cloudflarestorage.com/ s3 cp \
            babel/protocols/helium/helium-validator.toml \
            s3://cookbook-dev/chains/helium/validator/0.0.2/babel.toml
          AWS_ACCESS_KEY_ID=${{ secrets.R2_ACCESS_KEY_ID }} AWS_SECRET_ACCESS_KEY=${{ secrets.R2_SECRET_ACCESS_KEY }} AWS_REGION=us-east-1 \
            aws --endpoint-url https://${{ secrets.R2_ACCOUNT_ID }}.r2.cloudflarestorage.com/ s3 cp \
            babel/protocols/helium/helium-validator.toml \
            s3://cookbook-dev/chains/helium/validator/0.0.3/babel.toml

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200
      - name: Pull images
        run: >
          docker compose pull

      - name: Start test env
        run: >
          docker compose up -d
      - name: Test
        run: >
          cargo test -p blockvisord
      - name: Shutdown test env
        if: always()
        run: >
          docker compose down
  lints:
    name: Lints
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy, rustfmt
          override: true
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -p blockvisord -- --check
      - name: Catch common mistakes
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -p blockvisord -- -D warnings

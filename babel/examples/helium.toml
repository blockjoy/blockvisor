urn  = "helium:validator"

# Create a list of methods you will export 
export = [
    "start",
    "stop",
    "height",
    "name",
    "address",
    "status"
]

[env]
path_append = "/blockjoy/bin/"

[config]
babel_version = "0.0.1"
node_version = "1.8.3-beta1"
node_type = "validator"
description = "blockchain for p2p wireless services"
jrpc_host = "http://localhost:4467/"

[bootstrap]
## 
# ignore bootstrap for now
##
tarball = "https://storage.blockjoy.com/proto/helium/secret_url"
extract_to = "/blockjoy/miner"
symlink = "/blockjoy/miner/bin/miner->/blockjoy/bin/miner"
checksum = "72581bda0586561dd7397e983059c186"

[monitor]
pid_file = "/var/run/helium.pid"

[methods]
    [methods.start]
    transport = "sh"
    desc = "start the helium validator"
    body = "miner daemon"

        [methods.start.response]
        response = "sh"
        status = 0
        field = ["stdout","stderr"]


    [methods.stop]
    transport = "sh"
    desc = "stop the helium validator"
    body = "miner stop"

        [methods.stop.response]
        response = "sh"
        status = 0
        field = ["stdout","stderr"]

    [methods.height]
    transport = "jrpc"
    desc = "get the blockchain height from this node"
    method = "block_height"

        [methods.height.response]
        response = "jrpc"
        status = 200
        field = ["epoch", "height"]

    [methods.name]
    transport = "jrpc"
    desc = "get the name of the validator"
    method = "info_name"

        [methods.name.response]
        response = "jrpc"
        status = 200
        field = ["name"]

    [methods.address]
    transport = "jrpc"
    desc = "get the address of the validator"
    body = "peer_addr"
    
        [methods.address.response]
        response = "jrpc"
        code = 200
        field = ["address"]


    [methods.status]
    transport = "sh"
    desc = "get the status of the helium valiator"
    method = "miner ping"

    [methods.status.response]
    response = "sh"
    status = 0
    field = ["stdout","stderr"]

[env]
path_append = "/blockjoy/bin/"

[config]
protocol = "eth"
node_type = "validator"
node_version = "2.3.0" # beacon chain 
min_babel_version = "0.0.1"
description = "eth blockchain validator"
api_host = "http://localhost:8000/"
ports = [8000]
data_directory_mount_point = "/blockjoy/miner/data"

[requirements]
vcpu_count = 1
mem_size_mb = 8192
disk_size_gb = 10

[supervisor]
backoff_timeout_ms = 60000
backoff_base_ms = 100
log_buffer_capacity_ln = 1000

    [[supervisor.entry_point]]
    command = "/usr/bin/lighthouse"
    args = ["--datadir", "/blockjoy/lighthouse", "vc", "--network","{{network}}", "--http","--suggested-fee-recipient", "{{eth_wallet}}", "--beacon-nodes", "{{beacon_nodes_csv}}" ]

[keys]
"*" = "/opt/secrets"

[[methods]]
name = "height"
transport = "rest"
method = "" # find 

    [methods.response]
    status = 200
    field = "" # find
    format = "raw" # find

[[methods]]
name = "address"
transport = "rest"
method = "eth/v1/node/identity" 

    [methods.response]
    status = 200
    field = "data.peer_id" 
    format = "json"

[[methods]]
name = "status"
transport = "rest"
method = "eth/v1/node/syncing" 

    [methods.response]
    status = 200
    field = "data.is_syncing"
    format = "json"

[[methods]]
name = "genesis_info"
transport = "rest"
method = "/eth/v1/beacon/genesis" 

    [methods.response]
    status = 200
    field = "data"
    format = "json"

[[methods]]
name = "init"
transport = "sh"
body = """
test /blockjoy/.init && \
    echo {{secret}} > /blockjoy/secret && \
    rm /blockjoy/validator_keys/* && \
    for key in {{keys}}; do echo $key > /blockjoy/validator_keys/${uuidgen}.json; done && \
    lighthouse --network {{network}} account validator import --directory /blockjoy/validator_keys --reuse-password --password-file /blockjoy/secret && \
    touch /blockjoy/.init
"""

    [methods.response]
    status = 200
    format = "raw"

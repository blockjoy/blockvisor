[env]
path_append = "/blockjoy/bin/"

[config]
protocol = "cosmos"
node_type = "validator"
node_version = "7.1.0" # cosmos hub
min_babel_version = "0.0.1"
description = "cosmos blockchain validator"
api_host = "http://localhost:26657/"

[firewall]
enabled = true
default_in = "deny"
default_out = "allow"

    [[firewall.rules]]
    name = "Allowed incoming traffic on port"
    policy = "allow"
    direction = "in"
    ports = [26657]

[requirements]
vcpu_count = 2
mem_size_mb = 32768
disk_size_gb = 2000

[supervisor]
backoff_timeout_ms = 60000
backoff_base_ms = 100
log_buffer_capacity_ln = 1000
data_directory_mount_point = "/blockjoy/cosmos/"


    [[supervisor.entry_point]]
    name = "cosmos-node"
    body = """
    test -f /blockjoy/.init && \
    gaiad start --home babelref:'supervisor.data_directory_mount_point' --x-crisis-skip-assert-invariants
    """

[[methods]]
name = "init"
transport = "sh"
body = """
! test -f /blockjoy/.init && \

mkdir babelref:'supervisor.data_directory_mount_point'/config -p 2>&1 | logger -t babel.init && \
wget -O babelref:'supervisor.data_directory_mount_point'/genesis.cosmoshub.json.gz  https://raw.githubusercontent.com/cosmos/{{NETWORK}}/master/genesis/babelref:'nets.{{NETWORK}}.genesis_file_name'.gz 2>&1 | logger -t babel.init && \
gunzip babelref:'supervisor.data_directory_mount_point'/genesis.cosmoshub.json.gz 2>&1 | logger -t babel.init && \
gaiad init cosmos-node --home babelref:'supervisor.data_directory_mount_point' --chain-id babelref:'nets.{{NETWORK}}.chain_id' 2>&1 | logger -t babel.init && \
mv babelref:'supervisor.data_directory_mount_point'/genesis.cosmoshub.json babelref:'supervisor.data_directory_mount_point'/config/genesis.json 2>&1 | logger -t babel.init && \
export URL=`curl -L https://quicksync.io/cosmos.json|jq -r '.[] |select(.file=="cosmoshub-4-babelref:'nets.{{NETWORK}}.chain_state'")|.url'` 2>&1 | logger -t babel.init && \
echo $URL 2>&1 | logger -t babel.init && \
cd babelref:'supervisor.data_directory_mount_point' $URL 2>&1 | logger -t babel.init && \
aria2c -x5 $URL 2>&1 | logger -t babel.init && \
lz4 -c -d `basename $URL` | tar xf - 2>&1 | logger -t babel.init && \
curl https://quicksync.io/addrbook.cosmos.json > babelref:'supervisor.data_directory_mount_point'/config/addrbook.json 2>&1 | logger -t babel.init && \

touch /blockjoy/.init
"""

    [methods.response]
    status = 200
    format = "raw"

[[methods]]
name = "application_status"
transport = "sh"
body = """
echo -n "Cancelled"
"""

    [methods.response]
    status = 200
    format = "raw"

[[methods]]
name = "height"
transport = "jrpc"
method = "status"

    [methods.response]
    code = 200
    field = "sync_info.latest_block_height"

[[methods]]
name = "address"
transport = "jrpc"
method = "status"

    [methods.response]
    code = 200
    field = "validator_info.pub_key.value" 

[[methods]]
name = "status"
transport = "jrpc"
method = "health"

    [methods.response]
    code = 200
    field = "result"

[[methods]]
name = "genesis_info"
transport = "jrpc"
method = "genesis"

    [methods.response]
    code = 200
    field = "result"

[nets.mainnet]
net_type = "main"
url = "https://rpc.cosmos.network:26657"
genesis_file_name = "genesis.cosmoshub-4.json"
chain_id = "cosmoshub-4"
chain_state = "pruned""

[nets.testnet]
net_type = "test"
url = "https://cosmos-testnet-rpc.allthatnode.com:26657"
genesis_file_name = ""
chain_id = ""
chain_state = """

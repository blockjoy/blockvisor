[env]
path_append = "/blockjoy/bin/"

[config]
protocol = "solana"
node_type = "validator"
node_version = "1.10.34"
min_babel_version = "0.0.1"
description = "solana blockchain validator"
api_host = "http://localhost:8899/"

[firewall]
enabled = true
default_in = "deny"
default_out = "allow"

    [[firewall.rules]]
    name = "Allowed incoming traffic on port"
    policy = "allow"
    direction = "in"
    ports = [8899]

[requirements]
vcpu_count = 32
mem_size_mb = 131072
disk_size_gb = 1500

[supervisor]
backoff_timeout_ms = 60000
backoff_base_ms = 100
log_buffer_capacity_ln = 1000
data_directory_mount_point = "/blockjoy/solana/data"


    [[supervisor.entry_point]]
    name = "solana-node"
    body = """
    test -f /blockjoy/.init && \
    solana-validator \
    --identity babelref:'supervisor.data_directory_mount_point'/validator-keypair.json \
    --vote-account babelref:'supervisor.data_directory_mount_point'/vote-account-keypair.json \
    --rpc-port 8899 \
    --entrypoint entrypoint.{{NETWORK}}.solana.com:8001 \
    --limit-ledger-size \
    --log babelref:'supervisor.data_directory_mount_point'/solana-validator.log
    """

[[methods]]
name = "init"
transport = "sh"
body = """
! test -f /blockjoy/.init && \
solana config set --url babelref:'nets.{{NETWORK}}.url' 2>&1 | logger -t babel.init && \
solana-keygen new -o babelref:'supervisor.data_directory_mount_point'/validator-keypair.json  2>&1 | logger -t babel.init && \
solana-keygen new -o babelref:'supervisor.data_directory_mount_point'/authorized-withdrawer-keypair.json  2>&1 | logger -t babel.init && \
solana-keygen new -o babelref:'supervisor.data_directory_mount_point'/vote-account-keypair.json  2>&1 | logger -t babel.init && \
solana create-vote-account babelref:'supervisor.data_directory_mount_point'/vote-account-keypair.json babelref:'supervisor.data_directory_mount_point'/validator-keypair.json babelref:'supervisor.data_directory_mount_point'/authorized-withdrawer-keypair.json  2>&1 | logger -t babel.init && \
touch /blockjoy/.init
"""

    [methods.response]
    status = 200
    format = "raw"

[[methods]]
name = "application_status"
transport = "sh"
body = """
echo -n "Cancelled"
"""

    [methods.response]
    status = 200
    format = "raw"

[[methods]]
name = "height"
transport = "jrpc"
method = "getBlockHeight"

    [methods.response]
    code = 200
    field = "result"

[[methods]]
name = "address"
transport = "jrpc"
method = "getClusterNodes"
    
    [methods.response]
    code = 200
    field = "pubkey"

[[methods]]
name = "status"
transport = "jrpc"
method = "getHealth"

    [methods.response]
    code = 200
    field = "result"

[nets.mainnet]
net_type = "main"
url = "api.mainnet-beta.solana.com"
metrics_db = "mainnet-beta"
metrics_user = "mainnet-beta_write"
metrics_password = "password"

[nets.testnet]
net_type = "test"
url = "https://api.testnet.solana.com"
metrics_db = "tds"
metrics_user = "testnet_write"
metrics_password = "c4fa841aa918bf8274e3e2a44d77568d9861b3ea"

[nets.devnet]
net_type = "dev"
url = "https://api.devnet.solana.com"
metrics_db = "devnet"
metrics_user = "scratch_writer"
metrics_password = "topsecret"

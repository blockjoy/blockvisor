version: 0.0.1 # Semantic version of the image. Must be increased according to the change type (major.minor.patch)
container_uri: blockjoy/{{ protocol_key }}/{{ variant_key }}/0.0.1 # Associated container image uri. May be arbitrary, but recommended convention is <org>/<protocol_key>/<variant_key>/<version>
key:
  protocol_key: {{ protocol_key }} # Name of protocol that is expected to be already populated in the API.
  variant_key: {{ variant_key }} # The same protocol can have different implementations. This field let identify what implementation(s) has been used.
                                 # Variant name may additional contain protocol network name e.g. "eth-mainnet".
                                 # This value will be available in a Rhai runtime via `node_env().variant_key`.
sku_code: SKU_code # The SKU code for this version (e.g. ETH-MN).
org_id: null # Uuid of organization to which protocol belongs to, or null if public.
description: Example image description # Brief image description.
visibility: private # Image visibility, allowed values: `public`, `dev`, `private`.
properties:
- key: arbitrary text property # Unique property key. Property value will be available in a Rhai runtime via `node_params().<key>` (e.g. `node_params().arbitrary_property`).
  description: this is some text property example # Brief property description.
  dynamic_value: true # If it can be updated after node is created, or it can be set only once on node creation.
  default_value: default_value # Default property value, if not provided by user.
  ui_type: !text # The way it should be presented to the user.
    new_archive: false # If it requires different protocol data set (affect archive_id).
    add_cpu: 1 # How existence of property affect required CPU
    add_memory_bytes: -1 # How existence of property affect required memory
    add_disk_bytes: 10 # How existence of property affect required disk space
- key: switch property
  description: this is some switch example
  dynamic_value: true
  default_value: off_value
  ui_type: !switch
    on:
      value: on_value
      impact:
        new_archive: true
        add_cpu: 3
        add_memory_bytes: 10000000
        add_disk_bytes: 10000000000
    off:
      value: off_value
      impact: null
- key: enum property
  description: this is some enum example
  required: true
  dynamic_value: true
  default_value: variant_a
  ui_type: !enum
  - value: variant_a
    impact: null
  - value: variant_b
    impact: null
  - value: variant_c
    impact:
      new_archive: true
      add_cpu: -1
      add_memory_bytes: 1000000
      add_disk_bytes: 1000000000
firewall_config:
  default_in: deny # Fallback action for inbound traffic used when packet doesn't match any rule. Allowed values: `deny`, `allow`, `reject`.
  default_out: allow # Fallback action for outbound traffic used when packet doesn't match any rule. Allowed values: `deny`, `allow`, `reject`.
  rules:
  - key: example_rule # Unique rule key.
    description: null # Brief rule description.
    protocol: both # Allowed values: `tcp`, `udp`, `both`.
    direction: in # Traffic direction for which rule applies. Allowed values: `in`, `out`.
    action: allow # Action applied on packet that match rule. Allowed values: `deny`, `allow`, `reject`.
    ips:
    - ip: 1.2.3.4/30 # IP(s) compliant with CIDR notation.
      name: authorize client ip # Brief ip description.
    ports:
    - port: 12901 # Port number.
      name: service port # Brief port description.
min_cpu: 1 # Minimum CPU required to run image.
min_memory_bytes: 1000000000 # Minimum RAM memory required to run image.
min_disk_bytes: 2000000000 # Minimum disk space required to run image.
ramdisks:
- mount: /mnt/ramdisk # Path to mount RAM disk to.
  size_bytes: 100000000 # RAM disk size.